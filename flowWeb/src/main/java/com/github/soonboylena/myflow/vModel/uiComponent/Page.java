package com.github.soonboylena.myflow.vModel.uiComponent;import com.fasterxml.jackson.annotation.JsonProperty;import com.github.soonboylena.myflow.vModel.AbstractDwc;import com.github.soonboylena.myflow.vModel.IUiDefinition;import com.github.soonboylena.myflow.vModel.UiObject;import com.github.soonboylena.myflow.vModel.uiAction.UrlObject;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import java.util.ArrayList;import java.util.List;public class Page extends AbstractDwc<PageDefinition> {    private transient static final String TYPE = "nPage";    public Page(String title) {        super();        setDefine(new PageDefinition(title));    }    public Page(String title, String subtitle) {        super();        setDefine(new PageDefinition(title, subtitle));    }    private PageDefinition getDefinition() {        return null != this.getDefine() ? this.getDefine() : new PageDefinition();    }    @Override    public List<UiObject> getContents() {        return null;    }    public void addBtn(Button button) {        getDefinition().addBtn(button);    }    public void addBtn(List<Button> buttons) {        getDefinition().addBtn(buttons);    }    public void setDataUrl(UrlObject dataUrl) {        getDefinition().setDataUrl(dataUrl);    }    public void setStatusUrl(UrlObject statusUrl) {        getDefinition().setStatusUrl(statusUrl);    }    public void setBackUrl(String backUrl) {        getDefinition().setBackUrl(backUrl);    }    public void addForm(Form form) {        getDefinition().getForms().add(form);    }    @Override    public String getType() {        return TYPE;    }}@Data@NoArgsConstructor@AllArgsConstructorclass PageDefinition implements IUiDefinition {    private String title;    private String subTitle;    private List<Button> buttons;    @JsonProperty(value = "data_url")    private UrlObject dataUrl;    @JsonProperty(value = "status_url")    private UrlObject statusUrl;    private String backUrl;    private List<Form> forms = new ArrayList<>(3);    public PageDefinition(String title) {        this.title = title;    }    public PageDefinition(String title, String subtitle) {        this.subTitle = subtitle;        this.title = title;    }    public void addBtn(Button button) {        if (null == this.getButtons()) {            this.buttons = new ArrayList<>();        }        this.buttons.add(button);    }    public void addBtn(List<Button> button) {        if (null == this.getButtons()) {            this.buttons = new ArrayList<>();        }        this.buttons.addAll(button);    }}